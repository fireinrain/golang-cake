package main

import (
	"fmt"
	"math/big"
	"net"
)

func main() {
	// 定义CIDR范围列表
	cidrLists := [][]string{
		[]string{"1.112.0.0/14",
			"36.240.0.0/14",
			"45.112.128.0/22",
			"60.64.0.0/12",
			"60.80.0.0/14",
			"60.84.0.0/15",
			"60.86.0.0/16",
			"60.87.0.0/21",
			"60.87.8.0/23",
			"60.87.10.0/24",
			"60.87.13.0/24",
			"60.87.14.0/23",
			"60.87.16.0/20",
			"60.87.32.0/19",
			"60.87.64.0/18",
			"60.87.128.0/17",
			"60.88.0.0/13",
			"60.96.0.0/11",
			"60.128.0.0/11",
			"61.45.240.0/21",
			"61.114.240.0/20",
			"61.115.192.0/20",
			"61.122.32.0/20",
			"61.125.128.0/20",
			"61.193.160.0/19",
			"61.195.176.0/20",
			"61.200.0.0/18",
			"61.202.192.0/18",
			"61.203.128.0/20",
			"61.206.16.0/20",
			"61.206.128.0/18",
			"61.213.0.0/20",
			"61.215.192.0/20",
			"101.102.128.0/17",
			"101.110.0.0/18",
			"103.28.164.0/22",
			"103.35.60.0/22",
			"103.48.164.0/22",
			"103.51.36.0/22",
			"103.52.20.0/22",
			"103.52.240.0/22",
			"103.56.48.0/22",
			"103.57.28.0/22",
			"103.57.44.0/22",
			"103.61.244.0/22",
			"103.62.244.0/22",
			"103.71.36.0/22",
			"103.75.252.0/22",
			"103.82.112.0/22",
			"103.192.120.0/22",
			"103.199.220.0/22",
			"103.204.56.0/22",
			"103.209.148.0/22",
			"103.212.188.0/22",
			"103.215.252.0/22",
			"103.227.160.0/22",
			"103.232.12.0/22",
			"111.188.0.0/14",
			"114.48.0.0/14",
			"118.103.0.0/17",
			"122.128.98.0/24",
			"126.0.0.0/12",
			"126.16.0.0/15",
			"126.19.0.0/16",
			"126.20.0.0/14",
			"126.24.0.0/14",
			"126.28.0.0/15",
			"126.31.0.0/16",
			"126.32.0.0/12",
			"126.48.0.0/14",
			"126.53.0.0/16",
			"126.54.0.0/15",
			"126.56.0.0/13",
			"126.64.0.0/10",
			"126.128.0.0/13",
			"126.140.0.0/14",
			"126.144.0.0/15",
			"126.146.0.0/16",
			"126.147.0.0/17",
			"126.147.128.0/18",
			"126.147.192.0/19",
			"126.147.224.0/20",
			"126.147.240.0/21",
			"126.147.248.0/22",
			"126.148.0.0/14",
			"126.152.0.0/13",
			"126.160.0.0/12",
			"126.176.0.0/13",
			"126.184.0.0/14",
			"126.188.0.0/15",
			"126.193.0.0/16",
			"126.194.0.0/15",
			"126.196.0.0/14",
			"126.200.0.0/16",
			"126.203.0.0/16",
			"126.204.0.0/14",
			"126.208.0.0/16",
			"126.211.0.0/16",
			"126.212.0.0/14",
			"126.216.0.0/14",
			"126.220.0.0/15",
			"126.224.0.0/16",
			"126.227.0.0/16",
			"126.229.0.0/16",
			"126.230.0.0/16",
			"126.232.0.0/13",
			"126.240.0.0/15",
			"126.245.0.0/16",
			"126.247.0.0/16",
			"126.248.0.0/15",
			"126.250.0.0/16",
			"126.252.0.0/14",
			"157.103.10.0/23",
			"157.103.12.0/24",
			"157.103.20.0/24",
			"157.103.51.0/24",
			"157.103.52.0/24",
			"158.207.0.0/16",
			"160.24.0.0/16",
			"160.189.0.0/16",
			"165.76.128.0/17",
			"192.51.52.0/23",
			"192.51.54.0/24",
			"202.19.112.0/24",
			"202.19.120.0/24",
			"202.21.160.0/20",
			"202.86.56.0/21",
			"202.230.206.0/24",
			"202.234.130.0/24",
			"202.237.183.0/24",
			"202.239.22.0/24",
			"202.240.52.0/22",
			"202.243.104.0/23",
			"202.251.136.0/22",
			"202.251.141.0/24",
			"202.251.142.0/23",
			"203.76.247.0/24",
			"210.129.4.0/23",
			"210.140.245.0/24",
			"210.143.128.0/20",
			"210.152.28.0/24",
			"210.152.185.0/24",
			"210.152.205.0/24",
			"210.158.206.0/24",
			"210.171.100.0/24",
			"210.235.31.0/24",
			"210.239.93.0/24",
			"211.2.207.0/24",
			"211.14.130.0/24",
			"211.14.135.0/24",
			"211.15.32.0/19",
			"211.120.36.0/24",
			"218.45.208.0/20",
			"218.45.224.0/19",
			"218.112.0.0/12",
			"218.128.0.0/12",
			"218.176.0.0/13",
			"219.0.0.0/10",
			"219.101.128.0/17",
			"219.127.64.0/18",
			"219.127.128.0/17",
			"219.168.0.0/13",
			"219.176.0.0/12",
			"219.192.0.0/12",
			"219.208.0.0/13",
			"220.0.0.0/10",
			"221.16.0.0/12",
			"221.32.0.0/11",
			"221.64.0.0/11",
			"221.96.0.0/12",
		}, []string{
			"63.223.70.0/24",
			"63.223.99.0/24",
			"63.223.117.0/24",
			"63.223.123.0/24",
			"100.42.26.0/24",
		},
		[]string{
			"103.70.212.0/22",
			"103.205.72.0/22",
		},
		// ... 添加其他CIDR范围 ...
	}

	// 遍历CIDR范围并计算总IP数
	for _, cidrList := range cidrLists {
		totalIPs := big.NewInt(0)

		for _, cidr := range cidrList {
			_, ipNet, err := net.ParseCIDR(cidr)
			if err != nil {
				fmt.Printf("无法解析CIDR范围：%s\n", cidr)
				continue
			}

			// 计算范围内的IP数
			//ip := ipNet.IP.To4()
			ones, bits := ipNet.Mask.Size()
			total := new(big.Int).Lsh(big.NewInt(1), uint(bits-ones))

			totalIPs.Add(totalIPs, total)
		}

		fmt.Printf("总IP数：%s\n", totalIPs.String())
	}
}
